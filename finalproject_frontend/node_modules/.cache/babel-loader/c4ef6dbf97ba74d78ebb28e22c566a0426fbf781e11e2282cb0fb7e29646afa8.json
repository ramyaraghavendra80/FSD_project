{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramya\\\\FSD_project\\\\finalproject_frontend\\\\src\\\\Components\\\\SeatBooking\\\\SeatBooking.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./SeatBooking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SeatBooking() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const username = localStorage.getItem(\"username\");\n  const [formData, setFormData] = useState({\n    category: \"Standard\",\n    date: \"\",\n    time: \"01:00:00\",\n    seatNumbers: [],\n    movieName: \"\",\n    theaterId: \"\",\n    theaterName: \"\",\n    theaterAddress: \"\",\n    price: 0,\n    user: \"\"\n  });\n  const [isBookingSuccessful, setIsBookingSuccessful] = useState(false);\n  const [isConfirmationModalOpen, setIsConfirmationModalOpen] = useState(false);\n  const [bookingId, setBookingId] = useState(null);\n  const [selectedTheaterId, setSelectedTheaterId] = useState(\"\");\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const [theaterNames, setTheaterNames] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [availableSeats, setAvailableSeats] = useState([]);\n  const [bookedSeats, setBookedSeats] = useState([]);\n  useEffect(() => {\n    const fetchSeatData = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/project/movie/${id}/seats/`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          const {\n            available,\n            booked\n          } = data;\n          setAvailableSeats(available);\n          setBookedSeats(booked);\n        } else {\n          console.error(\"Failed to fetch seat data:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch seat data:\", error.message);\n      }\n    };\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/project/movies/${id}/`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          const theaterIds = data.theater.map(theater => theater.id);\n          setSelectedMovie(data);\n          setFormData({\n            ...formData,\n            movieName: data.title\n          });\n          fetchTheaters(theaterIds);\n        } else {\n          console.error(\"Failed to fetch movie details:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch movie details:\", error.message);\n      }\n    };\n    const fetchTheaters = async theaterIds => {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/project/theaters/?ids=${theaterIds.join(\",\")}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTheaterNames(data);\n        } else {\n          console.error(\"Failed to fetch theaters:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch theaters:\", error.message);\n      }\n    };\n    fetchMovieDetails();\n    fetchSeatData();\n  }, [accessToken, id]);\n  const handleSeatClick = seatNumber => {\n    const updatedSelectedSeats = [...selectedSeats];\n    if (updatedSelectedSeats.includes(seatNumber)) {\n      updatedSelectedSeats.splice(updatedSelectedSeats.indexOf(seatNumber), 1);\n    } else {\n      updatedSelectedSeats.push(seatNumber);\n    }\n    setSelectedSeats(updatedSelectedSeats);\n  };\n  const fetchTheaterDetails = async theaterId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/project/theaters/${theaterId}/`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFormData({\n          ...formData,\n          theaterId: data.id,\n          theaterName: data.name,\n          theaterAddress: data.address\n        });\n      } else {\n        console.error(\"Failed to fetch theater details:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch theater details:\", error.message);\n    }\n  };\n  const calculateTotalPrice = () => {\n    const pricePerSeat = formData.category === \"Standard\" ? 10 : formData.category === \"VIP\" ? 15 : 8;\n    const totalPrice = selectedSeats.length * pricePerSeat;\n    setTotalPrice(totalPrice);\n    return totalPrice;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (selectedSeats.length === 0) {\n      alert(\"Please select at least one seat.\");\n      return;\n    }\n\n    // Prepare the data to be sent to the server\n    const requestData = {\n      seat_number: selectedSeats,\n      category: formData.category,\n      date: formData.date,\n      time: formData.time,\n      theater: formData.theaterId,\n      price: formData.price\n    };\n    try {\n      // Send a POST request to book the selected seats\n      const response = await fetch(`http://127.0.0.1:8000/project/movie/${id}/seats/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (response.ok) {\n        // Booking was successful\n        const data = await response.json();\n        setBookingId(data.booking_id);\n        setTotalPrice(data.total_price);\n        setIsConfirmationModalOpen(true);\n\n        // setIsBookingSuccessful(true);\n      } else {\n        alert(\"Seat is already booked...!\", response.statusText);\n      }\n    } catch (error) {\n      alert(\"Booking failed:\", error.message);\n    }\n  };\n  const handleConfirmBooking = async () => {\n    try {\n      if (selectedSeats.length === 0) {\n        alert(\"Please select at least one seat.\");\n        return;\n      }\n      const totalPrice = calculateTotalPrice();\n      setFormData({\n        ...formData,\n        price: totalPrice\n      });\n      const bookingData = {\n        seat_number: selectedSeats.join(\",\"),\n        category: formData.category,\n        date: formData.date,\n        time: formData.time,\n        price: totalPrice,\n        user: username,\n        movie: formData.movieName,\n        theater: formData.theaterId\n      };\n      const response = await fetch(`http://127.0.0.1:8000/project/booking-confirmation/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`\n        },\n        body: JSON.stringify(bookingData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const {\n          booking_id,\n          total_price\n        } = data;\n        setBookingId(booking_id);\n        setIsBookingSuccessful(true); // Set isBookingSuccessful to true here\n        setIsConfirmationModalOpen(true);\n      } else {\n        alert(\"Booking failed:\", response.statusText);\n      }\n    } catch (error) {\n      alert(\"Booking failed:\", error.message);\n    }\n  };\n  const isSeatAvailable = seatNumber => availableSeats && availableSeats.includes(seatNumber);\n  const isSeatBooked = seatNumber => bookedSeats && bookedSeats.includes(seatNumber) && !selectedSeats.includes(seatNumber);\n  const seatRows = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n  const seatColumns = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seatform\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"seat-heading\",\n      children: \"Seat Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), isBookingSuccessful ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Booking successful! Your booking ID is: \", bookingId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/ticket/${bookingId}/`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Generate Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this) : isConfirmationModalOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Confirm Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", formData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", formData.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Movie Name: \", formData.movieName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Theater Name: \", formData.theaterName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Theater Address: \", formData.theaterAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Seats: \", selectedSeats.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: \", formData.price, \" Rs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"category: \", formData.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalbutton\",\n        onClick: handleConfirmBooking,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalbutton\",\n        onClick: () => setIsConfirmationModalOpen(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"theaterName\",\n            children: \"Theater Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"theaterName\",\n            name: \"theaterName\",\n            value: formData.theaterId,\n            onChange: e => {\n              setSelectedSeats([]);\n              setSelectedTheaterId(e.target.value);\n              setFormData({\n                ...formData,\n                theaterId: e.target.value\n              });\n              fetchTheaterDetails(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Theater\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), theaterNames ? theaterNames.map(theater => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: theater.id,\n              children: theater.name\n            }, theater.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Loading theaters...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            name: \"category\",\n            value: formData.category,\n            onChange: e => setFormData({\n              ...formData,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Standard\",\n              children: \"Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"VIP\",\n              children: \"VIP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"date\",\n            name: \"date\",\n            value: formData.date,\n            onChange: e => setFormData({\n              ...formData,\n              date: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2023-10-01\",\n              children: \"2023-10-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2023-10-02\",\n              children: \"2023-10-02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"time\",\n            name: \"time\",\n            value: formData.time,\n            onChange: e => setFormData({\n              ...formData,\n              time: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"01:00:00\",\n              children: \"01:00:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"02:00:00\",\n              children: \"02:00:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-map\",\n        children: seatRows.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seat-row\",\n          children: seatColumns.map(column => {\n            const seatNumber = `${row}${column}`;\n            const isSelected = selectedSeats.includes(seatNumber);\n            const isAvailable = isSeatAvailable(seatNumber);\n            const isBooked = isSeatBooked(seatNumber);\n            const seatClass = isAvailable ? \"available\" : isBooked ? \"booked\" : \"unavailable\";\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `seat ${seatClass} ${isSelected ? \"selected\" : \"\"}`,\n              onClick: () => handleSeatClick(seatNumber),\n              title: `Seat: ${seatNumber}`,\n              children: seatNumber\n            }, seatNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 21\n            }, this);\n          })\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Seats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n}\n_s(SeatBooking, \"xedXNyxJolhjxz0WhmfS7psmZUg=\", false, function () {\n  return [useParams];\n});\n_c = SeatBooking;\nexport default SeatBooking;\nvar _c;\n$RefreshReg$(_c, \"SeatBooking\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","SeatBooking","_s","id","accessToken","localStorage","getItem","username","formData","setFormData","category","date","time","seatNumbers","movieName","theaterId","theaterName","theaterAddress","price","user","isBookingSuccessful","setIsBookingSuccessful","isConfirmationModalOpen","setIsConfirmationModalOpen","bookingId","setBookingId","selectedTheaterId","setSelectedTheaterId","selectedSeats","setSelectedSeats","theaterNames","setTheaterNames","selectedMovie","setSelectedMovie","totalPrice","setTotalPrice","availableSeats","setAvailableSeats","bookedSeats","setBookedSeats","fetchSeatData","response","fetch","headers","Authorization","ok","data","json","available","booked","console","error","statusText","message","fetchMovieDetails","theaterIds","theater","map","title","fetchTheaters","join","handleSeatClick","seatNumber","updatedSelectedSeats","includes","splice","indexOf","push","fetchTheaterDetails","name","address","calculateTotalPrice","pricePerSeat","length","handleSubmit","e","preventDefault","alert","requestData","seat_number","method","body","JSON","stringify","booking_id","total_price","handleConfirmBooking","bookingData","movie","isSeatAvailable","isSeatBooked","seatRows","seatColumns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","onSubmit","htmlFor","value","onChange","target","required","row","column","isSelected","isAvailable","isBooked","seatClass","type","_c","$RefreshReg$"],"sources":["C:/Users/ramya/FSD_project/finalproject_frontend/src/Components/SeatBooking/SeatBooking.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SeatBooking.css\";\r\n\r\nfunction SeatBooking() {\r\n  const { id } = useParams();\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    category: \"Standard\",\r\n    date: \"\",\r\n    time: \"01:00:00\",\r\n    seatNumbers: [],\r\n    movieName: \"\",\r\n    theaterId: \"\",\r\n    theaterName: \"\",\r\n    theaterAddress: \"\",\r\n    price: 0,\r\n    user: \"\",\r\n  });\r\n\r\n  const [isBookingSuccessful, setIsBookingSuccessful] = useState(false);\r\n  const [isConfirmationModalOpen, setIsConfirmationModalOpen] = useState(false);\r\n  const [bookingId, setBookingId] = useState(null);\r\n  const [selectedTheaterId, setSelectedTheaterId] = useState(\"\");\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [theaterNames, setTheaterNames] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [availableSeats, setAvailableSeats] = useState([]);\r\n  const [bookedSeats, setBookedSeats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSeatData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://127.0.0.1:8000/project/movie/${id}/seats/`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const { available, booked } = data;\r\n          setAvailableSeats(available);\r\n          setBookedSeats(booked);\r\n        } else {\r\n          console.error(\"Failed to fetch seat data:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch seat data:\", error.message);\r\n      }\r\n    };\r\n\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://127.0.0.1:8000/project/movies/${id}/`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const theaterIds = data.theater.map((theater) => theater.id);\r\n          setSelectedMovie(data);\r\n          setFormData({ ...formData, movieName: data.title });\r\n          fetchTheaters(theaterIds);\r\n        } else {\r\n          console.error(\"Failed to fetch movie details:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch movie details:\", error.message);\r\n      }\r\n    };\r\n\r\n    const fetchTheaters = async (theaterIds) => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://127.0.0.1:8000/project/theaters/?ids=${theaterIds.join(\",\")}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTheaterNames(data);\r\n        } else {\r\n          console.error(\"Failed to fetch theaters:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch theaters:\", error.message);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n    fetchSeatData();\r\n  }, [accessToken, id]);\r\n\r\n  const handleSeatClick = (seatNumber) => {\r\n    const updatedSelectedSeats = [...selectedSeats];\r\n\r\n    if (updatedSelectedSeats.includes(seatNumber)) {\r\n      updatedSelectedSeats.splice(updatedSelectedSeats.indexOf(seatNumber), 1);\r\n    } else {\r\n      updatedSelectedSeats.push(seatNumber);\r\n    }\r\n\r\n    setSelectedSeats(updatedSelectedSeats);\r\n  };\r\n\r\n  const fetchTheaterDetails = async (theaterId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://127.0.0.1:8000/project/theaters/${theaterId}/`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFormData({\r\n          ...formData,\r\n          theaterId: data.id,\r\n          theaterName: data.name,\r\n          theaterAddress: data.address,\r\n        });\r\n      } else {\r\n        console.error(\"Failed to fetch theater details:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch theater details:\", error.message);\r\n    }\r\n  };\r\n\r\n  const calculateTotalPrice = () => {\r\n    const pricePerSeat =\r\n      formData.category === \"Standard\"\r\n        ? 10\r\n        : formData.category === \"VIP\"\r\n        ? 15\r\n        : 8;\r\n    const totalPrice = selectedSeats.length * pricePerSeat;\r\n    setTotalPrice(totalPrice);\r\n    return totalPrice;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (selectedSeats.length === 0) {\r\n      alert(\"Please select at least one seat.\");\r\n      return;\r\n    }\r\n  \r\n    // Prepare the data to be sent to the server\r\n    const requestData = {\r\n      seat_number: selectedSeats,\r\n      category: formData.category,\r\n      date: formData.date,\r\n      time: formData.time,\r\n      theater: formData.theaterId,\r\n      price:formData.price\r\n    };\r\n  \r\n    try {\r\n      // Send a POST request to book the selected seats\r\n      const response = await fetch(\r\n        `http://127.0.0.1:8000/project/movie/${id}/seats/`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        // Booking was successful\r\n        const data = await response.json();\r\n        setBookingId(data.booking_id);\r\n        setTotalPrice(data.total_price);\r\n        setIsConfirmationModalOpen(true);\r\n\r\n        // setIsBookingSuccessful(true);\r\n      } else {\r\n        alert(\"Seat is already booked...!\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Booking failed:\", error.message);\r\n    }\r\n  };\r\n  \r\n  const handleConfirmBooking = async () => {\r\n    try {\r\n      if (selectedSeats.length === 0) {\r\n        alert(\"Please select at least one seat.\");\r\n        return;\r\n      }\r\n\r\n      const totalPrice = calculateTotalPrice();\r\n      setFormData({ ...formData, price: totalPrice });\r\n\r\n      const bookingData = {\r\n        seat_number: selectedSeats.join(\",\"),\r\n        category: formData.category,\r\n        date: formData.date,\r\n        time: formData.time,\r\n        price: totalPrice,\r\n        user: username,\r\n        movie: formData.movieName,\r\n        theater: formData.theaterId,\r\n      };\r\n\r\n      const response = await fetch(\r\n        `http://127.0.0.1:8000/project/booking-confirmation/`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          body: JSON.stringify(bookingData),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const { booking_id, total_price } = data;\r\n        setBookingId(booking_id);\r\n        setIsBookingSuccessful(true); // Set isBookingSuccessful to true here\r\n        setIsConfirmationModalOpen(true);\r\n      } else {\r\n        alert(\"Booking failed:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Booking failed:\", error.message);\r\n    }\r\n  };\r\n  \r\n  const isSeatAvailable = (seatNumber) =>\r\n    availableSeats && availableSeats.includes(seatNumber);\r\n\r\n  const isSeatBooked = (seatNumber) =>\r\n    bookedSeats &&\r\n    bookedSeats.includes(seatNumber) &&\r\n    !selectedSeats.includes(seatNumber);\r\n\r\n  const seatRows = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n  const seatColumns = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\n  return (\r\n    <div className=\"seatform\">\r\n      <h2 className=\"seat-heading\">Seat Booking</h2>\r\n      {isBookingSuccessful ? (\r\n        <div className=\"confirmation-message\">\r\n          <p>Booking successful! Your booking ID is: {bookingId}</p>\r\n          <Link to={`/ticket/${bookingId}/`}>\r\n            <button>Generate Ticket</button>\r\n          </Link>\r\n        </div>\r\n      ) :  isConfirmationModalOpen ? (\r\n        <div className=\"confirmation-modal\">\r\n          <h3>Confirm Booking</h3>\r\n          <p>Date: {formData.date}</p>\r\n          <p>Time: {formData.time}</p>\r\n          <p>Movie Name: {formData.movieName}</p>\r\n          <p>Theater Name: {formData.theaterName}</p>\r\n          <p>Theater Address: {formData.theaterAddress}</p>\r\n          <p>Selected Seats: {selectedSeats.join(\", \")}</p>\r\n          <p>Total Price: {formData.price} Rs</p>\r\n          <p>category: {formData.category}</p>\r\n          <p>User: {username}</p>\r\n          <button className=\"modalbutton\" onClick={handleConfirmBooking}>Confirm</button>\r\n          <button className=\"modalbutton\" onClick={() => setIsConfirmationModalOpen(false)}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} >\r\n          <div className=\"select-row\" >\r\n            <div>\r\n            <label htmlFor=\"theaterName\">Theater Name:</label>\r\n            <select\r\n              id=\"theaterName\"\r\n              name=\"theaterName\"\r\n              value={formData.theaterId}\r\n              onChange={(e) => {\r\n                setSelectedSeats([]);\r\n                setSelectedTheaterId(e.target.value);\r\n                setFormData({ ...formData, theaterId: e.target.value });\r\n                fetchTheaterDetails(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\">Select Theater</option>\r\n              {theaterNames ? (\r\n                theaterNames.map((theater) => (\r\n                  <option key={theater.id} value={theater.id}>\r\n                    {theater.name}\r\n                  </option>\r\n                ))\r\n              ) : (\r\n                <option>Loading theaters...</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"category\">Category:</label>\r\n            <select\r\n              id=\"category\"\r\n              name=\"category\"\r\n              value={formData.category}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, category: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Standard\">Standard</option>\r\n              <option value=\"VIP\">VIP</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"date\">Date:</label>\r\n            <select\r\n              id=\"date\"\r\n              name=\"date\"\r\n              value={formData.date}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, date: e.target.value })\r\n              }\r\n              required\r\n            >\r\n              <option value=\"\">Select Date</option>\r\n              <option value=\"2023-10-01\">2023-10-01</option>\r\n              <option value=\"2023-10-02\">2023-10-02</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"time\">Time:</label>\r\n            <select\r\n              id=\"time\"\r\n              name=\"time\"\r\n              value={formData.time}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, time: e.target.value })\r\n              }\r\n              required\r\n            >\r\n              <option value=\"01:00:00\">01:00:00</option>\r\n              <option value=\"02:00:00\">02:00:00</option>\r\n            </select>\r\n          </div>\r\n          </div>\r\n          <hr/>\r\n          <div className=\"seat-map\">\r\n            {seatRows.map((row) => (\r\n              <div key={row} className=\"seat-row\">\r\n                {seatColumns.map((column) => {\r\n                  const seatNumber = `${row}${column}`;\r\n                  const isSelected = selectedSeats.includes(seatNumber);\r\n                  const isAvailable = isSeatAvailable(seatNumber);\r\n                  const isBooked = isSeatBooked(seatNumber);\r\n                  const seatClass = isAvailable\r\n                    ? \"available\"\r\n                    : isBooked\r\n                    ? \"booked\"\r\n                    : \"unavailable\";\r\n\r\n                  return (\r\n                    <div\r\n                      key={seatNumber}\r\n                      className={`seat ${seatClass} ${\r\n                        isSelected ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSeatClick(seatNumber)}\r\n                      title={`Seat: ${seatNumber}`}\r\n                    >\r\n                      {seatNumber}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button type=\"submit\">Book Seats</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeatBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}