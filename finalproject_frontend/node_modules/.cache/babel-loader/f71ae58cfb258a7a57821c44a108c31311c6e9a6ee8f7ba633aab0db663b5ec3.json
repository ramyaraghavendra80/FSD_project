{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramya\\\\FSD_project\\\\finalproject_frontend\\\\src\\\\Components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const handleSubmit = async values => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/project/signin/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const accessToken = data.access_token;\n        const username = data.username;\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"username\", username);\n\n        // Trigger the parent component's login function\n        onLogin();\n        navigate(\"/\");\n      } else {\n        setError(\"Login failed. Please check your credentials.\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setError(\"An error occurred during login. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"loginform\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginheading\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginbody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"inputfield\",\n              type: \"text\",\n              id: \"username\",\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"errormsg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"inputfield\",\n              type: \"password\",\n              id: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"errormsg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/signup\",\n                  className: \"signuplink\",\n                  children: \"Signup here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginsubmit\",\n            type: \"submit\",\n            disabled: isLoading,\n            children: isLoading ? \"Logging in...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"ivpAIkJn7vKlknHNj5BUoW9DD6k=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","Link","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","_s","navigate","isLoading","setIsLoading","error","setError","initialValues","username","password","validationSchema","object","shape","string","required","handleSubmit","values","response","fetch","method","headers","body","JSON","stringify","ok","data","json","accessToken","access_token","localStorage","setItem","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","component","to","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ramya/FSD_project/finalproject_frontend/src/Components/Login/Login.jsx"],"sourcesContent":["// Login.js\r\nimport React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nfunction Login({ onLogin }) {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const handleSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:8000/project/signin/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(values),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const accessToken = data.access_token;\r\n        const username = data.username;\r\n\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"username\", username);\r\n\r\n        // Trigger the parent component's login function\r\n        onLogin();\r\n        navigate(\"/\");\r\n      } else {\r\n        setError(\"Login failed. Please check your credentials.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      setError(\"An error occurred during login. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form className=\"loginform\">\r\n          <div className=\"loginheading\">\r\n            <p>Login</p>\r\n          </div>\r\n          <hr />\r\n          <div className=\"loginbody\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Field\r\n                className=\"inputfield\"\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"username\"\r\n                component=\"div\"\r\n                className=\"errormsg\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field\r\n                className=\"inputfield\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"errormsg\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <p className=\"text\">\r\n                Don't have an account?\r\n                <span>\r\n                  <Link to=\"/signup\" className=\"signuplink\">\r\n                    Signup here\r\n                  </Link>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <button className=\"loginsubmit\" type=\"submit\" disabled={isLoading}>\r\n              {isLoading ? \"Logging in...\" : \"Login\"}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}